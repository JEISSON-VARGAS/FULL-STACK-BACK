version: '3.8'

services:
  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"  # Puerto externo 3307, interno 3306
    environment:
      MYSQL_ROOT_PASSWORD: app123
      MYSQL_DATABASE: full_stack
      MYSQL_USER: app
      MYSQL_PASSWORD: app123
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  migrate:
    build: .
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306   # usar puerto interno
      MYSQL_DATABASE: full_stack
      MYSQL_USER: app
      MYSQL_PASSWORD: app123
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "
        echo 'Esperando a que MySQL est√© completamente listo...' &&
        sleep 10 &&
        echo 'Inicializando migraciones si es necesario...' &&
        flask db init || echo 'Migraciones ya inicializadas' &&
        echo 'Ejecutando migraciones...' &&
        flask db upgrade &&
        echo 'Migraciones completadas exitosamente'
      "
    restart: "no"

  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: full_stack
      MYSQL_USER: app
      MYSQL_PASSWORD: app123
    depends_on:
      mysql:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - app-network
    volumes:
      - .:/app
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
